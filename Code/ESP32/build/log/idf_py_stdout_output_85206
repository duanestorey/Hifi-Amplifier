[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/build/bootloader/esp-idf/esptool_py && /Users/duane/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/duane/Code/Github/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/build/bootloader/bootloader.bin
Bootloader binary size 0x68f0 bytes. 0x710 bytes (6%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/amplifier.cpp.obj
/Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/main/amplifier.cpp: In member function 'void Amplifier::handleAudioThread()':
/Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/main/amplifier.cpp:391:20: warning: variable 'state' set but not used [-Wunused-but-set-variable]
  391 |     AmplifierState state = getCurrentState();
      |                    ^~~~~
/Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/main/amplifier.cpp: In member function 'void Amplifier::handleAmplifierThread()':
/Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/main/amplifier.cpp:339:21: warning: this statement may fall through [-Wimplicit-fallthrough=]
  339 |                     }
      |                     ^
/Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/main/amplifier.cpp:340:17: note: here
  340 |                 case Message::MSG_INPUT_BUTTON_PRESS:
      |                 ^~~~
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable hifi-amp.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 26 ELF sections
Successfully created esp32 image.
Generated /Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/build/hifi-amp.bin
[9/10] cd /Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/build/esp-idf/esptool_py && /Users/duane/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/duane/Code/Github/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/build/partition_table/partition-table.bin /Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/build/hifi-amp.bin
hifi-amp.bin binary size 0xf9db0 bytes. Smallest app partition is 0x2625a0 bytes. 0x1687f0 bytes (59%) free.
[9/10] cd /Users/duane/Code/Github/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.27.4/bin/cmake -D IDF_PATH=/Users/duane/Code/Github/esp-idf -D "SERIAL_TOOL=/Users/duane/.espressif/python_env/idf5.2_py3.9_env/bin/python;;/Users/duane/Code/Github/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/duane/Code/Github/Hifi-Amplifier/Code/ESP32/build -P /Users/duane/Code/Github/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-A50285BI -b 2000000 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size detect 0x1000 bootloader/bootloader.bin 0x20000 hifi-amp.bin 0x8000 partition_table/partition-table.bin 0xd000 ota_data_initial.bin
esptool.py v4.7.dev1
Serial port /dev/cu.usbserial-A50285BI
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c4:de:e2:1b:1a:b8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 2000000
Changed.
Configuring flash size...
Auto-detected Flash size: 16MB
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00020000 to 0x00119fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000d000 to 0x0000efff...
Flash params set to 0x0240
Compressed 26864 bytes to 16854...
Writing at 0x00001000... (50 %)
Writing at 0x0000768a... (100 %)
Wrote 26864 bytes (16854 compressed) at 0x00001000 in 0.5 seconds (effective 406.4 kbit/s)...
Hash of data verified.
Compressed 1023408 bytes to 624722...
Writing at 0x00020000... (2 %)
Writing at 0x0002c0ce... (5 %)
Writing at 0x000358bd... (7 %)
Writing at 0x0003ade9... (10 %)
Writing at 0x000437c0... (12 %)
Writing at 0x00057eaa... (15 %)
Writing at 0x0005d7dc... (17 %)
Writing at 0x00063038... (20 %)
Writing at 0x0006815f... (23 %)
Writing at 0x0006d78d... (25 %)
Writing at 0x00072836... (28 %)
Writing at 0x00077944... (30 %)
Writing at 0x0007caf8... (33 %)
Writing at 0x00082288... (35 %)
Writing at 0x0008792a... (38 %)
Writing at 0x0008cafb... (41 %)
Writing at 0x0009201a... (43 %)
Writing at 0x000972d8... (46 %)
Writing at 0x0009c7d8... (48 %)
Writing at 0x000a1ef0... (51 %)
Writing at 0x000a75ea... (53 %)
Writing at 0x000ad17d... (56 %)
Writing at 0x000b2008... (58 %)
Writing at 0x000b6d6a... (61 %)
Writing at 0x000bc406... (64 %)
Writing at 0x000c2228... (66 %)
Writing at 0x000c8f5e... (69 %)
Writing at 0x000d07a8... (71 %)
Writing at 0x000d96bf... (74 %)
Writing at 0x000e01d1... (76 %)
Writing at 0x000e5888... (79 %)
Writing at 0x000ebe10... (82 %)
Writing at 0x000f3c4b... (84 %)
Writing at 0x000fc470... (87 %)
Writing at 0x00103ad0... (89 %)
Writing at 0x00108c2a... (92 %)
Writing at 0x0010e2f9... (94 %)
Writing at 0x0011399c... (97 %)
Writing at 0x001190a2... (100 %)
Wrote 1023408 bytes (624722 compressed) at 0x00020000 in 9.2 seconds (effective 893.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 120...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (120 compressed) at 0x00008000 in 0.1 seconds (effective 381.5 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000d000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000d000 in 0.1 seconds (effective 513.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
